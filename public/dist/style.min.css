@-webkit-keyframes glow{0%,100%{text-shadow:0 0 10px rgba(255,255,128,0)}50%{text-shadow:0 0 10px #ffff80}}@keyframes glow{0%,100%{text-shadow:0 0 10px rgba(255,255,128,0)}50%{text-shadow:0 0 10px #ffff80}}*{box-sizing:border-box}body,html{overflow:hidden}body{background:#272822;color:#fff;font-family:'Source Code Pro'!important;margin:0;-webkit-font-smoothing:antialiased;position:relative}[layout~=full-col]{height:100vh;max-height:100vh}.file-nav{padding:1em 0 0;margin:0;width:250px;background:#222;font-size:.8em;overflow-y:auto;overflow-x:hidden;font-family:'Helvetica Neue',Helvetica,Arial,sans-serif;font-weight:700}.file-nav .name:hover,.file-nav .name:hover:after,.file-nav .name:hover:before{background:#333}.file-nav,.file-nav ul{list-style:none}.file-nav ul{padding:0}.file-nav .directory .name{color:#aaa}.file-nav .file .name{color:#777}.file-nav .name{display:block;cursor:pointer;padding:.7em 0;border-left:2px solid transparent;white-space:nowrap;height:35px;position:relative;z-index:2;-webkit-transition:.1s;transition:.1s}.file-nav .name i.fa{color:#aaa}.file-nav .name:after,.file-nav .name:before{position:absolute;content:'';display:block;top:0;right:100%;width:100px;height:35px;z-index:-1;-webkit-transition:.1s;transition:.1s}.file-nav .name:after{right:auto;left:100%}.file-nav .name:hover i.fa{color:#ccc}.file-nav .name.current{color:#fff;background:#4e4e4e}.file-nav .name.current i.fa{color:#fff}.file-nav .name.current:after,.file-nav .name.current:before{background:#4e4e4e}.file-nav .name.changed{-webkit-animation:glow 1s infinite;animation:glow 1s infinite;color:#ffff80;background:0 0}.file-nav .name.changed i.fa{color:#ffff80}.file-nav .name.changed:after,.file-nav .name.changed:before{background:0 0}.file-nav li{border-radius:3px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;padding-left:1.4em;position:relative}.file-nav li i.fa{margin-right:.5em;display:inline-block;width:.5em;text-align:center}.content{overflow:scroll}pre{font-weight:600;margin:.5em 0}code,pre{font-size:14px;text-shadow:none!important}code[class*=language-],pre[class*=language-]{font-family:'Source Code Pro'}.line-numbers .line-numbers-rows{border-right:0}.no-file-chosen{color:rgba(255,255,255,.1);font-weight:200;font-size:3em;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.prism-previewer-color,.prism-previewer-gradient{margin-left:-70px;margin-top:-60px}#sidebar-resizer{background-color:#666;position:absolute;top:0;bottom:0;left:250px;width:6px;cursor:e-resize}#sidebar-resizer:hover{background-color:#aaa}
/*# sourceMappingURL=data:application/json;base64, */
